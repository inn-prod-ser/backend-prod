name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1) Clona el repo completo (incluye history para semantic version)
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # 2) Calcula la versión semántica basada en tus commits
      - name: Determine semantic version
        id: version
        uses: PaulHatch/semantic-version@v4.0.3
        with:
          major_pattern: "major:"
          minor_pattern: "feat:"
          format: "${major}.${minor}.${patch}-prerelease${increment}"

      # 3) Configura Docker Buildx (para multi-plataforma si lo necesitas)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # 4) Logueo en Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 5) Build: crea la imagen con tu build-arg APP_VERSION
      - name: Build Docker image
        run: |
          NEW_TAG=${{ steps.version.outputs.version }}
          docker build \
            --build-arg APP_VERSION=${NEW_TAG} \
            -t ${{ secrets.DOCKER_REPOSITORY }}:${NEW_TAG} \
            -t ${{ secrets.DOCKER_REPOSITORY }}:latest \
            .

      # 6) Push: sube ambos tags
      - name: Push Docker image
        run: |
          NEW_TAG=${{ steps.version.outputs.version }}
          docker push ${{ secrets.DOCKER_REPOSITORY }}:${NEW_TAG}
          docker push ${{ secrets.DOCKER_REPOSITORY }}:latest
